

enum VersionAlgorithm {
  @JsonValue('semver')
semver,
  @JsonValue('integer')
integer,
  @JsonValue('alpha')
alpha,
  @JsonValue('date')
date,
  @JsonValue('natural')
natural,
}

enum PublicationStatus {
  @JsonValue('draft')
draft,
  @JsonValue('active')
active,
  @JsonValue('retired')
retired,
  @JsonValue('unknown')
unknown,
}

enum CapabilityStatementKind {
  @JsonValue('instance')
instance,
  @JsonValue('capability')
capability,
  @JsonValue('requirements')
requirements,
}

enum FhirVersion {
  @JsonValue('0.01')
001,
  @JsonValue('0.05')
005,
  @JsonValue('0.06')
006,
  @JsonValue('0.11')
011,
  @JsonValue('0.0')
00,
  @JsonValue('0.4')
04,
  @JsonValue('0.5')
05,
  @JsonValue('1.0')
10,
  @JsonValue('1.1')
11,
  @JsonValue('1.4')
14,
  @JsonValue('1.6')
16,
  @JsonValue('1.8')
18,
  @JsonValue('3.0')
30,
  @JsonValue('3.3')
33,
  @JsonValue('3.5')
35,
  @JsonValue('4.0')
40,
  @JsonValue('4.1')
41,
  @JsonValue('4.2')
42,
  @JsonValue('4.3')
43,
  @JsonValue('4.4')
44,
  @JsonValue('4.5')
45,
  @JsonValue('4.6')
46,
  @JsonValue('5.0')
50,
}

enum RestfulCapabilityMode {
  @JsonValue('client')
client,
  @JsonValue('server')
server,
}

enum RestfulSecurityService {
  @JsonValue('OAuth')
oauth,
  @JsonValue('SMART-on-FHIR')
smartonfhir,
  @JsonValue('NTLM')
ntlm,
  @JsonValue('Basic')
basic,
  @JsonValue('Kerberos')
kerberos,
  @JsonValue('Certificates')
certificates,
}

enum VersioningPolicy {
  @JsonValue('no-version')
noversion,
  @JsonValue('versioned')
versioned,
  @JsonValue('versioned-update')
versionedupdate,
}

enum ConditionalReadStatus {
  @JsonValue('not-supported')
notsupported,
  @JsonValue('modified-since')
modifiedsince,
  @JsonValue('not-match')
notmatch,
  @JsonValue('full-support')
fullsupport,
}

enum ConditionalDeleteStatus {
  @JsonValue('not-supported')
notsupported,
  @JsonValue('single')
single,
  @JsonValue('multiple')
multiple,
}

enum ReferenceHandlingPolicy {
  @JsonValue('literal')
literal,
  @JsonValue('logical')
logical,
  @JsonValue('resolves')
resolves,
  @JsonValue('enforced')
enforced,
  @JsonValue('local')
local,
}

enum SearchParamType {
  @JsonValue('number')
number,
  @JsonValue('date')
date,
  @JsonValue('string')
string,
  @JsonValue('token')
token,
  @JsonValue('reference')
reference,
  @JsonValue('composite')
composite,
  @JsonValue('quantity')
quantity,
  @JsonValue('uri')
uri,
  @JsonValue('special')
special,
}

enum MessageTransport {
  @JsonValue('http')
http,
  @JsonValue('ftp')
ftp,
  @JsonValue('mllp')
mllp,
}

enum EventCapabilityMode {
  @JsonValue('sender')
sender,
  @JsonValue('receiver')
receiver,
}

enum DocumentMode {
  @JsonValue('producer')
producer,
  @JsonValue('consumer')
consumer,
}



enum VersionAlgorithm {
  @JsonValue('semver')
semver,
  @JsonValue('integer')
integer,
  @JsonValue('alpha')
alpha,
  @JsonValue('date')
date,
  @JsonValue('natural')
natural,
}

enum PublicationStatus {
  @JsonValue('draft')
draft,
  @JsonValue('active')
active,
  @JsonValue('retired')
retired,
  @JsonValue('unknown')
unknown,
}

enum FhirVersion {
  @JsonValue('0.01')
001,
  @JsonValue('0.05')
005,
  @JsonValue('0.06')
006,
  @JsonValue('0.11')
011,
  @JsonValue('0.0')
00,
  @JsonValue('0.4')
04,
  @JsonValue('0.5')
05,
  @JsonValue('1.0')
10,
  @JsonValue('1.1')
11,
  @JsonValue('1.4')
14,
  @JsonValue('1.6')
16,
  @JsonValue('1.8')
18,
  @JsonValue('3.0')
30,
  @JsonValue('3.3')
33,
  @JsonValue('3.5')
35,
  @JsonValue('4.0')
40,
  @JsonValue('4.1')
41,
  @JsonValue('4.2')
42,
  @JsonValue('4.3')
43,
  @JsonValue('4.4')
44,
  @JsonValue('4.5')
45,
  @JsonValue('4.6')
46,
  @JsonValue('5.0')
50,
}

enum StructureDefinitionKind {
  @JsonValue('primitive-type')
primitivetype,
  @JsonValue('complex-type')
complextype,
  @JsonValue('resource')
resource,
  @JsonValue('logical')
logical,
}

enum ExtensionContextType {
  @JsonValue('fhirpath')
fhirpath,
  @JsonValue('element')
element,
  @JsonValue('extension')
extension,
}

enum FhirTypes {
  @JsonValue('Base')
base,
}

enum TypeDerivationRule {
  @JsonValue('specialization')
specialization,
  @JsonValue('constraint')
constraint,
}



enum VersionAlgorithm {
  @JsonValue('semver')
semver,
  @JsonValue('integer')
integer,
  @JsonValue('alpha')
alpha,
  @JsonValue('date')
date,
  @JsonValue('natural')
natural,
}

enum PublicationStatus {
  @JsonValue('draft')
draft,
  @JsonValue('active')
active,
  @JsonValue('retired')
retired,
  @JsonValue('unknown')
unknown,
}

enum SpdxLicense {
  @JsonValue('not-open-source')
notopensource,
  @JsonValue('0BSD')
0bsd,
  @JsonValue('AAL')
aal,
  @JsonValue('Abstyles')
abstyles,
  @JsonValue('Adobe-2006')
adobe2006,
  @JsonValue('Adobe-Glyph')
adobeglyph,
  @JsonValue('ADSL')
adsl,
  @JsonValue('AFL-1.1')
afl11,
  @JsonValue('AFL-1.2')
afl12,
  @JsonValue('AFL-2.0')
afl20,
  @JsonValue('AFL-2.1')
afl21,
  @JsonValue('AFL-3.0')
afl30,
  @JsonValue('Afmparse')
afmparse,
  @JsonValue('AGPL-1.0-only')
agpl10only,
  @JsonValue('AGPL-1.0-or-later')
agpl10orlater,
  @JsonValue('AGPL-3.0-only')
agpl30only,
  @JsonValue('AGPL-3.0-or-later')
agpl30orlater,
  @JsonValue('Aladdin')
aladdin,
  @JsonValue('AMDPLPA')
amdplpa,
  @JsonValue('AML')
aml,
  @JsonValue('AMPAS')
ampas,
  @JsonValue('ANTLR-PD')
antlrpd,
  @JsonValue('Apache-1.0')
apache10,
  @JsonValue('Apache-1.1')
apache11,
  @JsonValue('Apache-2.0')
apache20,
  @JsonValue('APAFML')
apafml,
  @JsonValue('APL-1.0')
apl10,
  @JsonValue('APSL-1.0')
apsl10,
  @JsonValue('APSL-1.1')
apsl11,
  @JsonValue('APSL-1.2')
apsl12,
  @JsonValue('APSL-2.0')
apsl20,
  @JsonValue('Artistic-1.0-cl8')
artistic10cl8,
  @JsonValue('Artistic-1.0-Perl')
artistic10perl,
  @JsonValue('Artistic-1.0')
artistic10,
  @JsonValue('Artistic-2.0')
artistic20,
  @JsonValue('Bahyph')
bahyph,
  @JsonValue('Barr')
barr,
  @JsonValue('Beerware')
beerware,
  @JsonValue('BitTorrent-1.0')
bittorrent10,
  @JsonValue('BitTorrent-1.1')
bittorrent11,
  @JsonValue('Borceux')
borceux,
  @JsonValue('BSD-1-Clause')
bsd1clause,
  @JsonValue('BSD-2-Clause-FreeBSD')
bsd2clausefreebsd,
  @JsonValue('BSD-2-Clause-NetBSD')
bsd2clausenetbsd,
  @JsonValue('BSD-2-Clause-Patent')
bsd2clausepatent,
  @JsonValue('BSD-2-Clause')
bsd2clause,
  @JsonValue('BSD-3-Clause-Attribution')
bsd3clauseattribution,
  @JsonValue('BSD-3-Clause-Clear')
bsd3clauseclear,
  @JsonValue('BSD-3-Clause-LBNL')
bsd3clauselbnl,
  @JsonValue('BSD-3-Clause-No-Nuclear-License-2014')
bsd3clausenonuclearlicense2014,
  @JsonValue('BSD-3-Clause-No-Nuclear-License')
bsd3clausenonuclearlicense,
  @JsonValue('BSD-3-Clause-No-Nuclear-Warranty')
bsd3clausenonuclearwarranty,
  @JsonValue('BSD-3-Clause')
bsd3clause,
  @JsonValue('BSD-4-Clause-UC')
bsd4clauseuc,
  @JsonValue('BSD-4-Clause')
bsd4clause,
  @JsonValue('BSD-Protection')
bsdprotection,
  @JsonValue('BSD-Source-Code')
bsdsourcecode,
  @JsonValue('BSL-1.0')
bsl10,
  @JsonValue('bzip2-1.0.5')
bzip2105,
  @JsonValue('bzip2-1.0.6')
bzip2106,
  @JsonValue('Caldera')
caldera,
  @JsonValue('CATOSL-1.1')
catosl11,
  @JsonValue('CC-BY-1.0')
ccby10,
  @JsonValue('CC-BY-2.0')
ccby20,
  @JsonValue('CC-BY-2.5')
ccby25,
  @JsonValue('CC-BY-3.0')
ccby30,
  @JsonValue('CC-BY-4.0')
ccby40,
  @JsonValue('CC-BY-NC-1.0')
ccbync10,
  @JsonValue('CC-BY-NC-2.0')
ccbync20,
  @JsonValue('CC-BY-NC-2.5')
ccbync25,
  @JsonValue('CC-BY-NC-3.0')
ccbync30,
  @JsonValue('CC-BY-NC-4.0')
ccbync40,
  @JsonValue('CC-BY-NC-ND-1.0')
ccbyncnd10,
  @JsonValue('CC-BY-NC-ND-2.0')
ccbyncnd20,
  @JsonValue('CC-BY-NC-ND-2.5')
ccbyncnd25,
  @JsonValue('CC-BY-NC-ND-3.0')
ccbyncnd30,
  @JsonValue('CC-BY-NC-ND-4.0')
ccbyncnd40,
  @JsonValue('CC-BY-NC-SA-1.0')
ccbyncsa10,
  @JsonValue('CC-BY-NC-SA-2.0')
ccbyncsa20,
  @JsonValue('CC-BY-NC-SA-2.5')
ccbyncsa25,
  @JsonValue('CC-BY-NC-SA-3.0')
ccbyncsa30,
  @JsonValue('CC-BY-NC-SA-4.0')
ccbyncsa40,
  @JsonValue('CC-BY-ND-1.0')
ccbynd10,
  @JsonValue('CC-BY-ND-2.0')
ccbynd20,
  @JsonValue('CC-BY-ND-2.5')
ccbynd25,
  @JsonValue('CC-BY-ND-3.0')
ccbynd30,
  @JsonValue('CC-BY-ND-4.0')
ccbynd40,
  @JsonValue('CC-BY-SA-1.0')
ccbysa10,
  @JsonValue('CC-BY-SA-2.0')
ccbysa20,
  @JsonValue('CC-BY-SA-2.5')
ccbysa25,
  @JsonValue('CC-BY-SA-3.0')
ccbysa30,
  @JsonValue('CC-BY-SA-4.0')
ccbysa40,
  @JsonValue('CC0-1.0')
cc010,
  @JsonValue('CDDL-1.0')
cddl10,
  @JsonValue('CDDL-1.1')
cddl11,
  @JsonValue('CDLA-Permissive-1.0')
cdlapermissive10,
  @JsonValue('CDLA-Sharing-1.0')
cdlasharing10,
  @JsonValue('CECILL-1.0')
cecill10,
  @JsonValue('CECILL-1.1')
cecill11,
  @JsonValue('CECILL-2.0')
cecill20,
  @JsonValue('CECILL-2.1')
cecill21,
  @JsonValue('CECILL-B')
cecillb,
  @JsonValue('CECILL-C')
cecillc,
  @JsonValue('ClArtistic')
clartistic,
  @JsonValue('CNRI-Jython')
cnrijython,
  @JsonValue('CNRI-Python-GPL-Compatible')
cnripythongplcompatible,
  @JsonValue('CNRI-Python')
cnripython,
  @JsonValue('Condor-1.1')
condor11,
  @JsonValue('CPAL-1.0')
cpal10,
  @JsonValue('CPL-1.0')
cpl10,
  @JsonValue('CPOL-1.02')
cpol102,
  @JsonValue('Crossword')
crossword,
  @JsonValue('CrystalStacker')
crystalstacker,
  @JsonValue('CUA-OPL-1.0')
cuaopl10,
  @JsonValue('Cube')
cube,
  @JsonValue('curl')
curl,
  @JsonValue('D-FSL-1.0')
dfsl10,
  @JsonValue('diffmark')
diffmark,
  @JsonValue('DOC')
doc,
  @JsonValue('Dotseqn')
dotseqn,
  @JsonValue('DSDP')
dsdp,
  @JsonValue('dvipdfm')
dvipdfm,
  @JsonValue('ECL-1.0')
ecl10,
  @JsonValue('ECL-2.0')
ecl20,
  @JsonValue('EFL-1.0')
efl10,
  @JsonValue('EFL-2.0')
efl20,
  @JsonValue('eGenix')
egenix,
  @JsonValue('Entessa')
entessa,
  @JsonValue('EPL-1.0')
epl10,
  @JsonValue('EPL-2.0')
epl20,
  @JsonValue('ErlPL-1.1')
erlpl11,
  @JsonValue('EUDatagrid')
eudatagrid,
  @JsonValue('EUPL-1.0')
eupl10,
  @JsonValue('EUPL-1.1')
eupl11,
  @JsonValue('EUPL-1.2')
eupl12,
  @JsonValue('Eurosym')
eurosym,
  @JsonValue('Fair')
fair,
  @JsonValue('Frameworx-1.0')
frameworx10,
  @JsonValue('FreeImage')
freeimage,
  @JsonValue('FSFAP')
fsfap,
  @JsonValue('FSFUL')
fsful,
  @JsonValue('FSFULLR')
fsfullr,
  @JsonValue('FTL')
ftl,
  @JsonValue('GFDL-1.1-only')
gfdl11only,
  @JsonValue('GFDL-1.1-or-later')
gfdl11orlater,
  @JsonValue('GFDL-1.2-only')
gfdl12only,
  @JsonValue('GFDL-1.2-or-later')
gfdl12orlater,
  @JsonValue('GFDL-1.3-only')
gfdl13only,
  @JsonValue('GFDL-1.3-or-later')
gfdl13orlater,
  @JsonValue('Giftware')
giftware,
  @JsonValue('GL2PS')
gl2ps,
  @JsonValue('Glide')
glide,
  @JsonValue('Glulxe')
glulxe,
  @JsonValue('gnuplot')
gnuplot,
  @JsonValue('GPL-1.0-only')
gpl10only,
  @JsonValue('GPL-1.0-or-later')
gpl10orlater,
  @JsonValue('GPL-2.0-only')
gpl20only,
  @JsonValue('GPL-2.0-or-later')
gpl20orlater,
  @JsonValue('GPL-3.0-only')
gpl30only,
  @JsonValue('GPL-3.0-or-later')
gpl30orlater,
  @JsonValue('gSOAP-1.3b')
gsoap13b,
  @JsonValue('HaskellReport')
haskellreport,
  @JsonValue('HPND')
hpnd,
  @JsonValue('IBM-pibs')
ibmpibs,
  @JsonValue('ICU')
icu,
  @JsonValue('IJG')
ijg,
  @JsonValue('ImageMagick')
imagemagick,
  @JsonValue('iMatix')
imatix,
  @JsonValue('Imlib2')
imlib2,
  @JsonValue('Info-ZIP')
infozip,
  @JsonValue('Intel-ACPI')
intelacpi,
  @JsonValue('Intel')
intel,
  @JsonValue('Interbase-1.0')
interbase10,
  @JsonValue('IPA')
ipa,
  @JsonValue('IPL-1.0')
ipl10,
  @JsonValue('ISC')
isc,
  @JsonValue('JasPer-2.0')
jasper20,
  @JsonValue('JSON')
json,
  @JsonValue('LAL-1.2')
lal12,
  @JsonValue('LAL-1.3')
lal13,
  @JsonValue('Latex2e')
latex2e,
  @JsonValue('Leptonica')
leptonica,
  @JsonValue('LGPL-2.0-only')
lgpl20only,
  @JsonValue('LGPL-2.0-or-later')
lgpl20orlater,
  @JsonValue('LGPL-2.1-only')
lgpl21only,
  @JsonValue('LGPL-2.1-or-later')
lgpl21orlater,
  @JsonValue('LGPL-3.0-only')
lgpl30only,
  @JsonValue('LGPL-3.0-or-later')
lgpl30orlater,
  @JsonValue('LGPLLR')
lgpllr,
  @JsonValue('Libpng')
libpng,
  @JsonValue('libtiff')
libtiff,
  @JsonValue('LiLiQ-P-1.1')
liliqp11,
  @JsonValue('LiLiQ-R-1.1')
liliqr11,
  @JsonValue('LiLiQ-Rplus-1.1')
liliqrplus11,
  @JsonValue('Linux-OpenIB')
linuxopenib,
  @JsonValue('LPL-1.0')
lpl10,
  @JsonValue('LPL-1.02')
lpl102,
  @JsonValue('LPPL-1.0')
lppl10,
  @JsonValue('LPPL-1.1')
lppl11,
  @JsonValue('LPPL-1.2')
lppl12,
  @JsonValue('LPPL-1.3a')
lppl13a,
  @JsonValue('LPPL-1.3c')
lppl13c,
  @JsonValue('MakeIndex')
makeindex,
  @JsonValue('MirOS')
miros,
  @JsonValue('MIT-0')
mit0,
  @JsonValue('MIT-advertising')
mitadvertising,
  @JsonValue('MIT-CMU')
mitcmu,
  @JsonValue('MIT-enna')
mitenna,
  @JsonValue('MIT-feh')
mitfeh,
  @JsonValue('MIT')
mit,
  @JsonValue('MITNFA')
mitnfa,
  @JsonValue('Motosoto')
motosoto,
  @JsonValue('mpich2')
mpich2,
  @JsonValue('MPL-1.0')
mpl10,
  @JsonValue('MPL-1.1')
mpl11,
  @JsonValue('MPL-2.0-no-copyleft-exception')
mpl20nocopyleftexception,
  @JsonValue('MPL-2.0')
mpl20,
  @JsonValue('MS-PL')
mspl,
  @JsonValue('MS-RL')
msrl,
  @JsonValue('MTLL')
mtll,
  @JsonValue('Multics')
multics,
  @JsonValue('Mup')
mup,
  @JsonValue('NASA-1.3')
nasa13,
  @JsonValue('Naumen')
naumen,
  @JsonValue('NBPL-1.0')
nbpl10,
  @JsonValue('NCSA')
ncsa,
  @JsonValue('Net-SNMP')
netsnmp,
  @JsonValue('NetCDF')
netcdf,
  @JsonValue('Newsletr')
newsletr,
  @JsonValue('NGPL')
ngpl,
  @JsonValue('NLOD-1.0')
nlod10,
  @JsonValue('NLPL')
nlpl,
  @JsonValue('Nokia')
nokia,
  @JsonValue('NOSL')
nosl,
  @JsonValue('Noweb')
noweb,
  @JsonValue('NPL-1.0')
npl10,
  @JsonValue('NPL-1.1')
npl11,
  @JsonValue('NPOSL-3.0')
nposl30,
  @JsonValue('NRL')
nrl,
  @JsonValue('NTP')
ntp,
  @JsonValue('OCCT-PL')
occtpl,
  @JsonValue('OCLC-2.0')
oclc20,
  @JsonValue('ODbL-1.0')
odbl10,
  @JsonValue('OFL-1.0')
ofl10,
  @JsonValue('OFL-1.1')
ofl11,
  @JsonValue('OGTSL')
ogtsl,
  @JsonValue('OLDAP-1.1')
oldap11,
  @JsonValue('OLDAP-1.2')
oldap12,
  @JsonValue('OLDAP-1.3')
oldap13,
  @JsonValue('OLDAP-1.4')
oldap14,
  @JsonValue('OLDAP-2.0.1')
oldap201,
  @JsonValue('OLDAP-2.0')
oldap20,
  @JsonValue('OLDAP-2.1')
oldap21,
  @JsonValue('OLDAP-2.2.1')
oldap221,
  @JsonValue('OLDAP-2.2.2')
oldap222,
  @JsonValue('OLDAP-2.2')
oldap22,
  @JsonValue('OLDAP-2.3')
oldap23,
  @JsonValue('OLDAP-2.4')
oldap24,
  @JsonValue('OLDAP-2.5')
oldap25,
  @JsonValue('OLDAP-2.6')
oldap26,
  @JsonValue('OLDAP-2.7')
oldap27,
  @JsonValue('OLDAP-2.8')
oldap28,
  @JsonValue('OML')
oml,
  @JsonValue('OpenSSL')
openssl,
  @JsonValue('OPL-1.0')
opl10,
  @JsonValue('OSET-PL-2.1')
osetpl21,
  @JsonValue('OSL-1.0')
osl10,
  @JsonValue('OSL-1.1')
osl11,
  @JsonValue('OSL-2.0')
osl20,
  @JsonValue('OSL-2.1')
osl21,
  @JsonValue('OSL-3.0')
osl30,
  @JsonValue('PDDL-1.0')
pddl10,
  @JsonValue('PHP-3.0')
php30,
  @JsonValue('PHP-3.01')
php301,
  @JsonValue('Plexus')
plexus,
  @JsonValue('PostgreSQL')
postgresql,
  @JsonValue('psfrag')
psfrag,
  @JsonValue('psutils')
psutils,
  @JsonValue('Python-2.0')
python20,
  @JsonValue('Qhull')
qhull,
  @JsonValue('QPL-1.0')
qpl10,
  @JsonValue('Rdisc')
rdisc,
  @JsonValue('RHeCos-1.1')
rhecos11,
  @JsonValue('RPL-1.1')
rpl11,
  @JsonValue('RPL-1.5')
rpl15,
  @JsonValue('RPSL-1.0')
rpsl10,
  @JsonValue('RSA-MD')
rsamd,
  @JsonValue('RSCPL')
rscpl,
  @JsonValue('Ruby')
ruby,
  @JsonValue('SAX-PD')
saxpd,
  @JsonValue('Saxpath')
saxpath,
  @JsonValue('SCEA')
scea,
  @JsonValue('Sendmail')
sendmail,
  @JsonValue('SGI-B-1.0')
sgib10,
  @JsonValue('SGI-B-1.1')
sgib11,
  @JsonValue('SGI-B-2.0')
sgib20,
  @JsonValue('SimPL-2.0')
simpl20,
  @JsonValue('SISSL-1.2')
sissl12,
  @JsonValue('SISSL')
sissl,
  @JsonValue('Sleepycat')
sleepycat,
  @JsonValue('SMLNJ')
smlnj,
  @JsonValue('SMPPL')
smppl,
  @JsonValue('SNIA')
snia,
  @JsonValue('Spencer-86')
spencer86,
  @JsonValue('Spencer-94')
spencer94,
  @JsonValue('Spencer-99')
spencer99,
  @JsonValue('SPL-1.0')
spl10,
  @JsonValue('SugarCRM-1.1.3')
sugarcrm113,
  @JsonValue('SWL')
swl,
  @JsonValue('TCL')
tcl,
  @JsonValue('TCP-wrappers')
tcpwrappers,
  @JsonValue('TMate')
tmate,
  @JsonValue('TORQUE-1.1')
torque11,
  @JsonValue('TOSL')
tosl,
  @JsonValue('Unicode-DFS-2015')
unicodedfs2015,
  @JsonValue('Unicode-DFS-2016')
unicodedfs2016,
  @JsonValue('Unicode-TOU')
unicodetou,
  @JsonValue('Unlicense')
unlicense,
  @JsonValue('UPL-1.0')
upl10,
  @JsonValue('Vim')
vim,
  @JsonValue('VOSTROM')
vostrom,
  @JsonValue('VSL-1.0')
vsl10,
  @JsonValue('W3C-19980720')
w3c19980720,
  @JsonValue('W3C-20150513')
w3c20150513,
  @JsonValue('W3C')
w3c,
  @JsonValue('Watcom-1.0')
watcom10,
  @JsonValue('Wsuipa')
wsuipa,
  @JsonValue('WTFPL')
wtfpl,
  @JsonValue('X11')
x11,
  @JsonValue('Xerox')
xerox,
  @JsonValue('XFree86-1.1')
xfree8611,
  @JsonValue('xinetd')
xinetd,
  @JsonValue('Xnet')
xnet,
  @JsonValue('xpp')
xpp,
  @JsonValue('XSkat')
xskat,
  @JsonValue('YPL-1.0')
ypl10,
  @JsonValue('YPL-1.1')
ypl11,
  @JsonValue('Zed')
zed,
  @JsonValue('Zend-2.0')
zend20,
  @JsonValue('Zimbra-1.3')
zimbra13,
  @JsonValue('Zimbra-1.4')
zimbra14,
  @JsonValue('zlib-acknowledgement')
zlibacknowledgement,
  @JsonValue('Zlib')
zlib,
  @JsonValue('ZPL-1.1')
zpl11,
  @JsonValue('ZPL-2.0')
zpl20,
  @JsonValue('ZPL-2.1')
zpl21,
}

enum FhirVersion {
  @JsonValue('0.01')
001,
  @JsonValue('0.05')
005,
  @JsonValue('0.06')
006,
  @JsonValue('0.11')
011,
  @JsonValue('0.0')
00,
  @JsonValue('0.4')
04,
  @JsonValue('0.5')
05,
  @JsonValue('1.0')
10,
  @JsonValue('1.1')
11,
  @JsonValue('1.4')
14,
  @JsonValue('1.6')
16,
  @JsonValue('1.8')
18,
  @JsonValue('3.0')
30,
  @JsonValue('3.3')
33,
  @JsonValue('3.5')
35,
  @JsonValue('4.0')
40,
  @JsonValue('4.1')
41,
  @JsonValue('4.2')
42,
  @JsonValue('4.3')
43,
  @JsonValue('4.4')
44,
  @JsonValue('4.5')
45,
  @JsonValue('4.6')
46,
  @JsonValue('5.0')
50,
}

enum FhirVersion {
  @JsonValue('0.01')
001,
  @JsonValue('0.05')
005,
  @JsonValue('0.06')
006,
  @JsonValue('0.11')
011,
  @JsonValue('0.0')
00,
  @JsonValue('0.4')
04,
  @JsonValue('0.5')
05,
  @JsonValue('1.0')
10,
  @JsonValue('1.1')
11,
  @JsonValue('1.4')
14,
  @JsonValue('1.6')
16,
  @JsonValue('1.8')
18,
  @JsonValue('3.0')
30,
  @JsonValue('3.3')
33,
  @JsonValue('3.5')
35,
  @JsonValue('4.0')
40,
  @JsonValue('4.1')
41,
  @JsonValue('4.2')
42,
  @JsonValue('4.3')
43,
  @JsonValue('4.4')
44,
  @JsonValue('4.5')
45,
  @JsonValue('4.6')
46,
  @JsonValue('5.0')
50,
}

enum GuidePageGeneration {
  @JsonValue('html')
html,
  @JsonValue('markdown')
markdown,
  @JsonValue('xml')
xml,
  @JsonValue('generated')
generated,
}

enum GuideParameterCode {
  @JsonValue('apply')
apply,
  @JsonValue('path-resource')
pathresource,
  @JsonValue('path-pages')
pathpages,
  @JsonValue('path-tx-cache')
pathtxcache,
  @JsonValue('expansion-parameter')
expansionparameter,
  @JsonValue('rule-broken-links')
rulebrokenlinks,
  @JsonValue('generate-xml')
generatexml,
  @JsonValue('generate-json')
generatejson,
  @JsonValue('generate-turtle')
generateturtle,
  @JsonValue('html-template')
htmltemplate,
}



enum VersionAlgorithm {
  @JsonValue('semver')
semver,
  @JsonValue('integer')
integer,
  @JsonValue('alpha')
alpha,
  @JsonValue('date')
date,
  @JsonValue('natural')
natural,
}

enum PublicationStatus {
  @JsonValue('draft')
draft,
  @JsonValue('active')
active,
  @JsonValue('retired')
retired,
  @JsonValue('unknown')
unknown,
}

enum SearchParamType {
  @JsonValue('number')
number,
  @JsonValue('date')
date,
  @JsonValue('string')
string,
  @JsonValue('token')
token,
  @JsonValue('reference')
reference,
  @JsonValue('composite')
composite,
  @JsonValue('quantity')
quantity,
  @JsonValue('uri')
uri,
  @JsonValue('special')
special,
}

enum SearchProcessingmode {
  @JsonValue('normal')
normal,
  @JsonValue('phonetic')
phonetic,
  @JsonValue('other')
other,
}

enum SearchComparator {
  @JsonValue('eq')
eq,
  @JsonValue('ne')
ne,
  @JsonValue('gt')
gt,
  @JsonValue('lt')
lt,
  @JsonValue('ge')
ge,
  @JsonValue('le')
le,
  @JsonValue('sa')
sa,
  @JsonValue('eb')
eb,
  @JsonValue('ap')
ap,
}

enum SearchModifierCode {
  @JsonValue('missing')
missing,
  @JsonValue('exact')
exact,
  @JsonValue('contains')
contains,
  @JsonValue('not')
not,
  @JsonValue('text')
text,
  @JsonValue('in')
in,
  @JsonValue('not-in')
notin,
  @JsonValue('below')
below,
  @JsonValue('above')
above,
  @JsonValue('type')
type,
  @JsonValue('identifier')
identifier,
  @JsonValue('of-type')
oftype,
  @JsonValue('code-text')
codetext,
  @JsonValue('text-advanced')
textadvanced,
  @JsonValue('iterate')
iterate,
}



enum VersionAlgorithm {
  @JsonValue('semver')
semver,
  @JsonValue('integer')
integer,
  @JsonValue('alpha')
alpha,
  @JsonValue('date')
date,
  @JsonValue('natural')
natural,
}

enum PublicationStatus {
  @JsonValue('draft')
draft,
  @JsonValue('active')
active,
  @JsonValue('retired')
retired,
  @JsonValue('unknown')
unknown,
}

enum MessageEvents {
}

enum MessageSignificanceCategory {
  @JsonValue('consequence')
consequence,
  @JsonValue('currency')
currency,
  @JsonValue('notification')
notification,
}

enum MessageheaderResponseRequest {
  @JsonValue('always')
always,
  @JsonValue('on-error')
onerror,
  @JsonValue('never')
never,
  @JsonValue('on-success')
onsuccess,
}



enum VersionAlgorithm {
  @JsonValue('semver')
semver,
  @JsonValue('integer')
integer,
  @JsonValue('alpha')
alpha,
  @JsonValue('date')
date,
  @JsonValue('natural')
natural,
}

enum PublicationStatus {
  @JsonValue('draft')
draft,
  @JsonValue('active')
active,
  @JsonValue('retired')
retired,
  @JsonValue('unknown')
unknown,
}

enum OperationKind {
  @JsonValue('operation')
operation,
  @JsonValue('query')
query,
}

enum OperationParameterUse {
  @JsonValue('in')
in,
  @JsonValue('out')
out,
}

enum OperationParameterScope {
  @JsonValue('instance')
instance,
  @JsonValue('type')
type,
  @JsonValue('system')
system,
}

enum FhirTypes {
  @JsonValue('Base')
base,
}

enum FhirTypes {
  @JsonValue('Base')
base,
}

enum SearchParamType {
  @JsonValue('number')
number,
  @JsonValue('date')
date,
  @JsonValue('string')
string,
  @JsonValue('token')
token,
  @JsonValue('reference')
reference,
  @JsonValue('composite')
composite,
  @JsonValue('quantity')
quantity,
  @JsonValue('uri')
uri,
  @JsonValue('special')
special,
}

enum BindingStrength {
  @JsonValue('required')
required,
  @JsonValue('extensible')
extensible,
  @JsonValue('preferred')
preferred,
  @JsonValue('example')
example,
}



enum VersionAlgorithm {
  @JsonValue('semver')
semver,
  @JsonValue('integer')
integer,
  @JsonValue('alpha')
alpha,
  @JsonValue('date')
date,
  @JsonValue('natural')
natural,
}

enum PublicationStatus {
  @JsonValue('draft')
draft,
  @JsonValue('active')
active,
  @JsonValue('retired')
retired,
  @JsonValue('unknown')
unknown,
}

enum CompartmentType {
  @JsonValue('Patient')
patient,
  @JsonValue('Encounter')
encounter,
  @JsonValue('RelatedPerson')
relatedperson,
  @JsonValue('Practitioner')
practitioner,
  @JsonValue('Device')
device,
  @JsonValue('EpisodeOfCare')
episodeofcare,
}



enum VersionAlgorithm {
  @JsonValue('semver')
semver,
  @JsonValue('integer')
integer,
  @JsonValue('alpha')
alpha,
  @JsonValue('date')
date,
  @JsonValue('natural')
natural,
}

enum PublicationStatus {
  @JsonValue('draft')
draft,
  @JsonValue('active')
active,
  @JsonValue('retired')
retired,
  @JsonValue('unknown')
unknown,
}

enum MapModelMode {
  @JsonValue('source')
source,
  @JsonValue('queried')
queried,
  @JsonValue('target')
target,
  @JsonValue('produced')
produced,
}

enum MapGroupTypeMode {
  @JsonValue('types')
types,
  @JsonValue('type-and-types')
typeandtypes,
}

enum MapInputMode {
  @JsonValue('source')
source,
  @JsonValue('target')
target,
}

enum MapSourceListMode {
  @JsonValue('first')
first,
  @JsonValue('not_first')
notfirst,
  @JsonValue('last')
last,
  @JsonValue('not_last')
notlast,
  @JsonValue('only_one')
onlyone,
}

enum MapTargetListMode {
  @JsonValue('first')
first,
  @JsonValue('share')
share,
  @JsonValue('last')
last,
  @JsonValue('single')
single,
}

enum MapTransform {
  @JsonValue('create')
create,
  @JsonValue('copy')
copy,
  @JsonValue('truncate')
truncate,
  @JsonValue('escape')
escape,
  @JsonValue('cast')
cast,
  @JsonValue('append')
append,
  @JsonValue('translate')
translate,
  @JsonValue('reference')
reference,
  @JsonValue('dateOp')
dateop,
  @JsonValue('uuid')
uuid,
  @JsonValue('pointer')
pointer,
  @JsonValue('evaluate')
evaluate,
  @JsonValue('cc')
cc,
  @JsonValue('c')
c,
  @JsonValue('qty')
qty,
  @JsonValue('id')
id,
  @JsonValue('cp')
cp,
}



enum VersionAlgorithm {
  @JsonValue('semver')
semver,
  @JsonValue('integer')
integer,
  @JsonValue('alpha')
alpha,
  @JsonValue('date')
date,
  @JsonValue('natural')
natural,
}

enum PublicationStatus {
  @JsonValue('draft')
draft,
  @JsonValue('active')
active,
  @JsonValue('retired')
retired,
  @JsonValue('unknown')
unknown,
}

enum GraphCompartmentUse {
  @JsonValue('where')
where,
  @JsonValue('requires')
requires,
}

enum GraphCompartmentRule {
  @JsonValue('identical')
identical,
  @JsonValue('matching')
matching,
  @JsonValue('different')
different,
  @JsonValue('custom')
custom,
}

enum CompartmentType {
  @JsonValue('Patient')
patient,
  @JsonValue('Encounter')
encounter,
  @JsonValue('RelatedPerson')
relatedperson,
  @JsonValue('Practitioner')
practitioner,
  @JsonValue('Device')
device,
  @JsonValue('EpisodeOfCare')
episodeofcare,
}

